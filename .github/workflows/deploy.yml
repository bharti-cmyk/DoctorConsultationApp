name: CI/CD Pipeline
 
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image (production)
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/doctor-consult:doctorconsultationapp"
          docker build --target production -t "$IMAGE_NAME" .

      - name: Push image to Docker Hub
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/doctor-consult:doctorconsultationapp"
          docker push "$IMAGE_NAME"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/doctor-consult:doctorconsultationapp"

            # Ensure app directory and .env exist (create basic one if missing)
            mkdir -p ~/doctor-consultation
            cd ~/doctor-consultation
            if [ ! -f .env ]; then
              echo "NODE_ENV=production" > .env
              echo "PORT=6000" >> .env
            fi

            # Pull latest image
            docker pull "$IMAGE_NAME"

            # Stop and remove existing container if present
            docker stop doctor-consultation || true
            docker rm doctor-consultation || true

            # Run container on port 80 -> 6000
            docker run -d \
              --name doctor-consultation \
              --env-file .env \
              -p 6001:6000 \
              --restart unless-stopped \
              "$IMAGE_NAME"

            # Health check
            sleep 5
            curl -f http://localhost/api/health || (docker logs --tail=200 doctor-consultation && exit 1) 